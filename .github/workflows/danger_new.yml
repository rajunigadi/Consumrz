name: ðŸš§ Danger

on:
  push:
    branches: develop
  pull_request:
      branches: develop

jobs:

  lint:
    name: Run lint checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Fetch all tags
        run: git fetch --prune --shallow --tags

      #- name: Set up JDK 1.8
      #  uses: actions/setup-java@v1
      #  with:
      #    java-version: 1.8

      # Cache Gradle dependencies
      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}

      # Cache Gradle Wrapper
      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run lint
        run: ./gradlew lint

      - name: Upload reports
        uses: actions/upload-artifact@v1
        with:
          name: lint-reports
          path: app/build/reports/lint-results-debug.xml

  ktlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          curl -sSLO https://github.com/pinterest/ktlint/releases/download/0.44.0/ktlint && chmod a+x ktlint && sudo mv ktlint /usr/local/bin/
      - name: run ktlint
        run: |
          ktlint --reporter=checkstyle, output=build/ktlint-report.xml
        continue-on-error: true
      - uses: yutailang0119/action-ktlint@v3
        with:
          report-path: build/*.xml # Support glob patterns by https://www.npmjs.com/package/@actions/glob
        continue-on-error: false # If annotations contain error of severity, action-ktlint exit 1.

  build:
    needs: [lint, ktlint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby 3.2.2
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      #- run: bundle exec rake
      - uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Bundle install
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Run danger
        run: |
          bundle install
          bundle exec danger --verbose
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}